@model eContentApp.Web.Models.CreatePostViewModel

@{
    ViewData["Title"] = "Create New Post";
}

<h1>Create New Post</h1>

<div class="row">
    <div class="col-md-9">
        <div class="form-group">
            <label asp-for="Title" class="control-label"></label>
            <input asp-for="Title" class="form-control" id="post-title" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Content" class="control-label"></label>
            <div id="editor" style="height: 300px;"></div>
            <span asp-validation-for="Content" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ThumbnailUrl" class="control-label"></label>
            <input asp-for="ThumbnailUrl" class="form-control" id="post-thumbnail" />
            <input type="file" id="thumbnail-upload-input" style="display:none;" accept="image/*" />
            <button type="button" id="upload-thumbnail-button" class="btn btn-secondary mt-2">Upload Thumbnail</button>
            <span asp-validation-for="ThumbnailUrl" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Categories</label>
            <select id="category-select" class="form-control" multiple>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>
        <div class="form-group mt-3">
            <button type="button" id="create-post-button" class="btn btn-primary">Create</button>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script>
        var quill;

        $(document).ready(function () {
            quill = new Quill('#editor', {
                theme: 'snow',
                modules: {
                    toolbar: {
                        container: [
                            ['bold', 'italic', 'underline', 'strike'],
                            ['blockquote', 'code-block'],
                            [{ 'header': 1 }, { 'header': 2 }],
                            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                            [{ 'script': 'sub'}, { 'script': 'super' }],
                            [{ 'indent': '-1'}, { 'indent': '+1' }],
                            [{ 'direction': 'rtl' }],
                            [{ 'size': ['small', false, 'large', 'huge'] }],
                            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                            [{ 'color': [] }, { 'background': [] }],
                            [{ 'font': [] }],
                            [{ 'align': [] }],
                            ['link', 'image'],
                            ['clean']
                        ],
                        handlers: {
                            'image': imageHandler
                        }
                    }
                }
            });

            function imageHandler() {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');
                input.click();

                input.onchange = async () => {
                    var file = input.files[0];
                    var formData = new FormData();
                    formData.append('file', file);

                    try {
                        const response = await fetch('http://localhost:5026/api/media/upload', {
                            method: 'POST',
                            body: formData
                        });

                        const result = await response.json();
                        if (response.ok) {
                            const range = quill.getSelection();
                            quill.insertEmbed(range.index, 'image', result.url);
                        } else {
                            console.error('Image upload failed:', result.message);
                            alert('Image upload failed: ' + result.message);
                        }
                    } catch (error) {
                        console.error('Error uploading image:', error);
                        alert('Error uploading image: ' + error.message);
                    }
                };
            }

            $('#create-post-button').on('click', function () {
                var title = $('#post-title').val();
                var content = quill.root.innerHTML;
                var thumbnailUrl = $('#post-thumbnail').val();
                var selectedCategoryIds = $('#category-select').val().map(id => id);

                var postData = {
                    title: title,
                    content: content,
                    thumbnailUrl: thumbnailUrl,
                    // categoryIds: selectedCategoryIds
                };

                $.ajax({
                    url: 'http://localhost:5026/api/posts',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(postData),
                    success: function (response) {
                        alert('Post created successfully!');
                        window.location.href = '/Home/Index'; // Redirect to post list
                    },
                    error: function (xhr, status, error) {
                        alert('Error creating post: ' + xhr.responseText);
                        console.error(xhr.responseText);
                    }
                });
            });

            $('#upload-thumbnail-button').on('click', function () {
                $('#thumbnail-upload-input').click();
            });

            $('#thumbnail-upload-input').on('change', async function () {
                var file = this.files[0];
                if (file) {
                    var formData = new FormData();
                    formData.append('file', file);

                    try {
                        const response = await fetch('http://localhost:5026/api/media/upload', {
                            method: 'POST',
                            body: formData
                        });

                        const result = await response.json();
                        if (response.ok) {
                            $('#post-thumbnail').val(result.url);
                            alert('Thumbnail uploaded successfully!');
                        } else {
                            console.error('Thumbnail upload failed:', result.message);
                            alert('Thumbnail upload failed: ' + result.message);
                        }
                    } catch (error) {
                        console.error('Error uploading thumbnail:', error);
                        alert('Error uploading thumbnail: ' + error.message);
                    }
                }
            });
        });
    </script>
}
